/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package maildetection;

/**
 *
 * @author Saurabh
 */

import java.awt.Color;
import java.awt.Rectangle;
import java.sql.*;
import java.util.ArrayList;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Document;

public class ShowMessageAdmin extends javax.swing.JFrame {
Statement st=null;
ResultSet rs=null;
frmConnection frm=new frmConnection();
    
    public ShowMessageAdmin(String msg) 
    {
        initComponents();
        txtMessage.setText(msg);
        
        int pos=0;
        ArrayList<String> sus_words=new ArrayList<>();
        
 try
 {
     st=frm.getCon().createStatement();
     rs=st.executeQuery("select * from dataset");
     while(rs.next())
     {

         String s=rs.getString("words").toLowerCase();
         sus_words.add(s);
     }
            
         
            for(String search:sus_words)
            {
                pos=0;
                
                String find = search;
                
                
                    // Focus the text area, otherwise the highlighting won't show up
                    txtMessage.requestFocusInWindow();
                    // Make sure we have a valid search term
                    if (find != null && find.length() > 0) {
                        Document document = txtMessage.getDocument();
                        
                        int findLength = find.length();
                        
                        try {
                            boolean found = false;
                        
                            while (pos + findLength <= document.getLength()) {
                                
                                // Extract the text from the docuemnt
                                String match = document.getText(pos, findLength).toLowerCase();
                                // Check to see if it matches or request
                                if (match.equals(find)) 
                                {
                                    found = true;
                                    break;
                                }
                                
                                pos++;
                            }

                            
                            if (found) 
                            {
                                // Get the rectangle of the where the text would be visible...
                                Rectangle viewRect = txtMessage.modelToView(pos);
                                // Scroll to make the rectangle visible
                                txtMessage.scrollRectToVisible(viewRect);
                                txtMessage.getHighlighter().addHighlight(pos, pos+findLength, new DefaultHighlighter.DefaultHighlightPainter(Color.magenta));    
                                
                                
                            }
                           
                        

                        } catch (Exception ex) {
                            
                        }

                    }
            }
            
            
        }
        catch(Exception ex)
        {
            
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtMessage = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel6.setBackground(new java.awt.Color(255, 204, 51));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Message Panel"));
        jPanel6.setLayout(null);

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon-delete.gif"))); // NOI18N
        jButton7.setText("Close");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton7);
        jButton7.setBounds(130, 410, 220, 50);

        jLabel4.setFont(new java.awt.Font("Algerian", 0, 18)); // NOI18N
        jLabel4.setText("Message Panel");
        jPanel6.add(jLabel4);
        jLabel4.setBounds(160, 40, 190, 24);

        jScrollPane2.setViewportView(txtMessage);

        jPanel6.add(jScrollPane2);
        jScrollPane2.setBounds(20, 90, 460, 290);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } 
         catch (Exception ex) {
            
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextPane txtMessage;
    // End of variables declaration//GEN-END:variables
}
